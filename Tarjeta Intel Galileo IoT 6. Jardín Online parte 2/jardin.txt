
//Librerias
#include <Ethernet.h>


char Cadena[100];
int coreccion=0;
int estado;
String info;

//Direccion MAC de la tarjeta Galileo
byte mac[] = { 0x98, 0x4F, 0xEE, 0x01, 0x46, 0x64 };

//Declaracion del servidor Ethernet, escuchando al puerto 80
EthernetServer server = EthernetServer(80); 
String readString;
EthernetClient client;

void setup() {
  
  pinMode(12, OUTPUT);  
  pinMode(13, OUTPUT);
  
  system("ifdown eth0");
  delay(500); 
  system("ifup eth0"); 
  delay(500);
  
  Serial.begin(9600);

  Serial.println("Configurando Ethernet...");
  if(!Ethernet.begin(mac)) {
    Serial.println("Error");
  }
  else {
    Serial.println("ok");
  }
 
  delay(2000);
  Serial.println("Listo");
  server.begin(); 
}

void loop() {
  
  float sensorValue = (float)analogRead(A0)*5.0/560.0;  
  ///////////////////////////////////////////////////////
  if (sensorValue>4.0)//planta totalmente seca
      estado=1;//"secaTotal";
  else if(sensorValue>3.5 & sensorValue<=4.0)
      estado=2;//"inundada";
  else if (sensorValue>2.0 & sensorValue<=2.5)
      estado=3;//"humeda";
  else if (sensorValue>2.5 & sensorValue<=3.5)
      estado=4;//"algo Seca";
  else
      estado=5;//"hay algo raro";
      
  switch(estado)
  {
   case 1://"secaTotal":
     digitalWrite(13,HIGH);
     digitalWrite(12,HIGH);
     info="secaTotal";
   break;
   case 2://"inundada":
     digitalWrite(13,LOW);
     digitalWrite(12,LOW);
     info="inundada";
   break;
   case 3://"humeda":
     digitalWrite(13,LOW);
     digitalWrite(12,LOW);
     delay(1500);
     digitalWrite(13,HIGH);
     digitalWrite(12,HIGH);
     delay(200);
     info="humeda";
   break;
   case 4://algo seca
     digitalWrite(13,LOW);
     digitalWrite(12,LOW);
     delay(100);
     digitalWrite(13,HIGH);
     digitalWrite(12,HIGH);
     delay(600);
     info="algo seca";
   break;
   default:
     info="algo raro";
     digitalWrite(13,LOW);
     digitalWrite(12,LOW);
   break;  
  }
  
  //////////////////////////////////////////////////////
  
  
  EthernetClient client = server.available();
  if (client) {
    boolean currentLineIsBlank = true;
    while (client.connected()) {
      if (client.available()) {
        char c = client.read();
         if (readString.length() < 100) {readString += c;}

       if (c == '\n' && currentLineIsBlank) {
        client.println("HTTP/1.1 200 OK"); //send new page
        client.println("Content-Type: text/html");
        client.println();  
        client.println("<html><head><title>Intel</title>");
        client.println("<meta http-equiv='refresh' content='5; url=http:/'/>");
        client.println("<meta name='apple-mobile-web-app-capable' content='yes' />");
        client.println("<meta name='apple-mobile-web-app-status-bar-style' content='black-translucent' />");
        client.println("<link rel='stylesheet' type='text/css' href='http://randomnerdtutorials.com/ethernetcss.css' />");
        client.println("<script>");
        client.println("function drawPicture(){");
        client.println("var canvas = document.getElementById('example');");
        client.println("var context = canvas.getContext('2d');");
        
        client.println("context.fillStyle = 'rgba(255,255,0,1)';");
        client.println("context.beginPath();");
        client.println("context.moveTo(75,100);");
        client.println("context.lineTo(175,100);");
        client.println("context.lineTo(150,200);");
	client.println("context.lineTo(100,200);");
        client.println("context.fill();");
		
	client.println("context.fillStyle = 'rgba(0,0,255,1)';");
        client.println("context.beginPath();");
        coreccion=100+(int)sensorValue*20;
        sprintf(Cadena,"context.moveTo(-25+75+ %d/4,%d);",coreccion,coreccion);
        client.println(Cadena);
        sprintf(Cadena,"context.lineTo(25+175-%d/4,%d);",coreccion,coreccion);
        client.println(Cadena);
        client.println("context.lineTo(150,200);");
	client.println("context.lineTo(100,200);");
        client.println("context.fill();");
        
        client.println("}");
        client.println("</script>");
        client.println("<style type='text/css'>");
         client.println(" canvas { border: 2px solid black; }");
        client.println("</style>");
        client.println("</head>");
        client.println("<body onload='drawPicture();'>");
        client.println("<H1>Intel</H1><hr/><br/>"); 
        client.println("<canvas id='example' width='500' height='250'>");
        client.println("There is supposed ");
        client.println("</canvas>");
        sprintf(Cadena, "<H1>Nivel Humedad: %f, V </H1>",sensorValue);
        
        client.println(Cadena);
         client.println("<H1>");
        client.println(info);
        client.println("</H1>");
        
        client.println("<br/><br/><br/>");   
        client.println("<p>Intel</p>");  
        
        client.println("</body>");
        client.println("</html>");

           delay(1);
           client.stop();
           readString="";   
       }
        if (c == '\n')      {currentLineIsBlank = true;} 
        else if (c != '\r') {currentLineIsBlank = false;}   
      }
    }
    Serial.println("cliente desconectado");
  }
}